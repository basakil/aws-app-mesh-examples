apiVersion: v1
kind: Namespace
metadata:
  name: app-yelb
  labels:
    mesh: yelb
    appmesh.k8s.aws/sidecarInjectorWebhook: enabled
---
apiVersion: appmesh.k8s.aws/v1beta2
kind: Mesh
metadata:
  name: yelb
spec:
  namespaceSelector:
    matchLabels:
      mesh: yelb
---
apiVersion: v1
kind: Service
metadata:
  namespace: app-yelb
  name: redis-server
  labels:
    app: redis-server
    tier: cache
spec:
  type: ClusterIP
  ports:
    - port: 6379
  selector:
    app: redis-server
    tier: cache
---
apiVersion: v1
kind: Service
metadata:
  namespace: app-yelb
  name: yelb-db
  labels:
    app: yelb-db
    tier: backenddb
spec:
  type: ClusterIP
  ports:
    - port: 5432
  selector:
    app: yelb-db
    tier: backenddb
---
apiVersion: v1
kind: Service
metadata:
  namespace: app-yelb
  name: yelb-appserver
  labels:
    app: yelb-appserver
    tier: middletier
spec:
  type: ClusterIP
  ports:
    - port: 4567
  selector:
    app: yelb-appserver
    tier: middletier
---
apiVersion: v1
kind: Service
metadata:
  namespace: app-yelb
  name: yelb-ui
  labels:
    app: yelb-ui
    tier: frontend
  annotations:
    service.beta.kubernetes.io/aws-load-balancer-name: "ds-test-02-lb-yelb"
    service.beta.kubernetes.io/aws-load-balancer-type: external
    service.beta.kubernetes.io/aws-load-balancer-scheme: internet-facing
    ## ip targets is recommended for EC2 and required for Fargate NLB services.
    service.beta.kubernetes.io/aws-load-balancer-nlb-target-type: ip
    service.beta.kubernetes.io/aws-load-balancer-attributes: "load_balancing.cross_zone.enabled=true"
    service.beta.kubernetes.io/aws-load-balancer-additional-resource-tags: "Project=yelb,Stage=demo,ClusterName=ds-test-02"
    ## //TODO: take EIP allocation IDs as a parameter
    # service.beta.kubernetes.io/aws-load-balancer-eip-allocations: "${INGRESS_EIP_ALLOC_IDS}"

spec:
  type: LoadBalancer
  loadBalancerSourceRanges:
    - 0.0.0.0/0
  ports:
    - port: 80
      protocol: TCP
      targetPort: 80
  selector:
    app: yelb-ui
    tier: frontend
---
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: app-yelb
  name: yelb-ui
spec:
  replicas: 1
  selector:
    matchLabels:
      app: yelb-ui
      tier: frontend
  template:
    metadata:
      labels:
        app: yelb-ui
        tier: frontend
        deploy_on: fargate
    spec:
      serviceAccountName: appmesh-pod
      containers:
        - name: yelb-ui
          image: mreferre/yelb-ui:0.7
          ports:
            - containerPort: 80
---
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: app-yelb
  name: redis-server
spec:
  selector:
    matchLabels:
      app: redis-server
      tier: cache
  replicas: 1
  template:
    metadata:
      labels:
        app: redis-server
        tier: cache
        deploy_on: fargate
    spec:
      serviceAccountName: appmesh-pod
      containers:
        - name: redis-server
          image: redis:4.0.2
          ports:
            - containerPort: 6379
---
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: app-yelb
  name: yelb-db
spec:
  replicas: 1
  selector:
    matchLabels:
      app: yelb-db
      tier: backenddb
  template:
    metadata:
      labels:
        app: yelb-db
        tier: backenddb
        deploy_on: fargate
    spec:
      serviceAccountName: appmesh-pod
      containers:
        - name: yelb-db
          image: mreferre/yelb-db:0.5
          ports:
            - containerPort: 5432
---
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: app-yelb
  name: yelb-appserver
spec:
  replicas: 1
  selector:
    matchLabels:
      app: yelb-appserver
      tier: middletier
  template:
    metadata:
      labels:
        app: yelb-appserver
        tier: middletier
        deploy_on: fargate
    spec:
      serviceAccountName: appmesh-pod
      containers:
        - name: yelb-appserver
          image: mreferre/yelb-appserver:0.5
          ports:
            - containerPort: 4567
